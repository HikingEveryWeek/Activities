load("Data/data.rData")
location = colnames(data)
shenzhen = grep(pattern="[塘莲羊梅梧峦蛇娘湾明银迎看澜冲沙鹏]", location)
shenzhen = c(shenzhen, grep("东湖",location))
shenzhen = c(shenzhen, 7, 41,91, 17) #南山，罗湿5号绿避
shenzhen = setdiff(shenzhen,39) # remove 西湾露营
hongkong = c(grep(pattern="[蒲麦丫径涧元凤]", location),grep("大东屿",location))
hongkong = c(hongkong,39)
remote = setdiff(1:length(location),c(shenzhen,hongkong))
x = c(深圳=length(shenzhen), 香港=length(hongkong), 远方=length(remote))
a = barplot(x,horiz=FALSE, ylab="组织次数", las=1, ylim=c(0,75))
text(y=x, x=a, labels=x, pos=3)
### 5. Network
test_data = data
# 5.1 generate node and edges
{
getEdge = function(cl,event=""){
# cl = test_data[,1]
cl = cl[cl != ""]
edge = sapply(1:length(cl), function(i){
a = cl[-i]
paste(cl[i],a,event, sep="%")
})
edge = as.vector(edge)
edge
}
edges = lapply(1:ncol(test_data),function(i){
getEdge(test_data[,i], event=colnames(test_data)[i])
})
edges = unlist(edges)
Graph = sapply(edges, function(s){
unlist(strsplit(s, split="%"))
})
Graph = t(Graph)
# index = which(sapply(Graph, length) != 3)
# Graph = Graph[-index]
# Graph = do.call(rbind, Graph)
rownames(Graph)=1:nrow(Graph)
colnames(Graph)=c("source","target","event")
}
# 5.3 each person degree
person.freq = table(Graph[,1])
person.freq = sort(person.freq, decreasing = TRUE)
barplot(person.freq[1:30], horiz=TRUE, las=2)
getSubset = function(name){
subset = Graph[Graph[,1]==name,]
freq = table(subset[,2])
subset = data.frame(source=subset[1,1],target=names(freq), time=as.numeric(freq))
subset = subset[order(subset[,"time"],decreasing = TRUE),]
subset
}
name = "彬"
subset = getSubset(name)
write.table(subset, file=sprintf("Interaction_table/%s.txt", name), sep="\t",row.names=FALSE)
flag = ifelse(nrow(subset)>100,100,nrow(subset))
g = graph_from_data_frame(subset[1:flag,], directed = FALSE)
library(igraph)
g = graph_from_data_frame(subset[1:flag,], directed = FALSE)
jpeg(file=sprintf("Interaction/%s.jpeg",name,nrow(subset),sum(subset[,"time"]>1)),
width=1024,height=1024)
main = sprintf("%s has hiked with %s person\nAnd %s person beyond 2 times",name,nrow(subset),
sum(subset[,"time"]>1))
plot.igraph(g, vertex.size=1, edge.width=subset[1:100,3],edge.label=subset[,"time"],
shape="circle", label.font=2, label.cex=15, layout=layout_as_star, label.dist=1,
main=main)
dev.off()
